version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sentrix-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - nextjs-app
      - supabase-kong
    networks:
      - sentrix-network

  # Next.js Application
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile.nextjs
    container_name: sentrix-nextjs-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:8000
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - HARDHAT_NETWORK_URL=http://hardhat-node:8545
      - PRIVATE_KEY=${PRIVATE_KEY}
    volumes:
      - ./app:/app/app
      - ./components:/app/components
      - ./lib:/app/lib
    depends_on:
      - supabase-db
      - redis
    networks:
      - sentrix-network

  # Supabase Database
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: sentrix-supabase-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - ./supabase/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    networks:
      - sentrix-network

  # Supabase API Gateway
  supabase-kong:
    image: kong:2.8.1
    container_name: sentrix-supabase-kong-prod
    restart: unless-stopped
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,rate-limiting
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml
    depends_on:
      - supabase-db
    networks:
      - sentrix-network

  # Supabase Auth
  supabase-auth:
    image: supabase/gotrue:v2.99.0
    container_name: sentrix-supabase-auth-prod
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:8000
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/postgres?search_path=auth
      GOTRUE_SITE_URL: http://localhost
      GOTRUE_URI_ALLOW_LIST: http://localhost
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
    networks:
      - sentrix-network

  # Supabase REST API
  supabase-rest:
    image: postgrest/postgrest:v11.2.0
    container_name: sentrix-supabase-rest-prod
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
    networks:
      - sentrix-network

  # Supabase Realtime
  supabase-realtime:
    image: supabase/realtime:v2.25.35
    container_name: sentrix-supabase-realtime-prod
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      PORT: 4000
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: ${JWT_SECRET}
      FLY_ALLOC_ID: fly123
      FLY_APP_NAME: realtime
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    networks:
      - sentrix-network

  # Supabase Studio (Database Management UI)
  supabase-studio:
    image: supabase/studio:20231103-a5b96d9
    container_name: sentrix-supabase-studio-prod
    restart: unless-stopped
    environment:
      SUPABASE_URL: http://localhost:8000
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      STUDIO_PG_META_URL: http://supabase-meta:8080
    depends_on:
      - supabase-kong
    networks:
      - sentrix-network

  # Supabase Meta (Database Metadata API)
  supabase-meta:
    image: supabase/postgres-meta:v0.68.0
    container_name: sentrix-supabase-meta-prod
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - sentrix-network

  # Hardhat Local Blockchain
  hardhat-node:
    build:
      context: .
      dockerfile: Dockerfile.hardhat
    container_name: sentrix-hardhat-node-prod
    restart: unless-stopped
    volumes:
      - ./contracts:/app/contracts
      - ./scripts:/app/scripts
      - ./hardhat.config.js:/app/hardhat.config.js
      - blockchain-data:/app/data
    command: npx hardhat node --hostname 0.0.0.0
    networks:
      - sentrix-network

  # Redis for Caching and Rate Limiting
  redis:
    image: redis:7-alpine
    container_name: sentrix-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - sentrix-network

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: sentrix-prometheus-prod
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sentrix-network

  # Grafana for Monitoring Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: sentrix-grafana-prod
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - sentrix-network

volumes:
  supabase-db-data:
  redis-data:
  prometheus-data:
  grafana-data:
  blockchain-data:

networks:
  sentrix-network:
    driver: bridge
